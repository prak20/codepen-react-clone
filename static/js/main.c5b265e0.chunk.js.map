{"version":3,"sources":["components/Editor.js","hooks/useLocal.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocal","key","initial","prefixKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","width","height","ReactDOM","render","document","getElementById"],"mappings":"iQAoDeA,EA3CA,SAACC,GAAW,IAEnBC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,YACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SALkB,EAQDC,oBAAS,GARR,mBAQfC,EARe,KAQVC,EARU,KAatB,OACI,mCACA,sBAAKC,UAAS,2BAAsBF,EAAO,GAAK,aAAhD,UACI,sBAAKE,UAAU,eAAf,UACKN,EACD,wBACAO,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,MAHpC,SAKC,cAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,WAGnD,cAAC,aAAD,CACAC,eAjBW,SAACC,EAAOC,EAAKd,GAC5BC,EAASD,IAiBLA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMpB,EACNqB,MAAO,WACPC,aAAa,WCzBdC,EAhBE,SAACC,EAAIC,GAClB,IAAMC,EAFK,iBAEYF,EADO,EAEPpB,oBAAS,WAC5B,IAAMuB,EAAUC,aAAaC,QAAQH,GACrC,OAAc,MAAXC,EAAwBG,KAAKC,MAAMJ,GAClB,oBAAVF,EACCA,IAEAA,KARe,mBAEvBvB,EAFuB,KAEjB8B,EAFiB,KAc9B,OAHAC,qBAAU,WACNL,aAAaM,QAAQR,EAAWI,KAAKK,UAAUjC,MAC9C,CAACwB,EAAWxB,IACV,CAACA,EAAO8B,ICgCJI,EA7CH,WAAO,IAAD,EACQb,EAAS,OAAQ,IADzB,mBACTc,EADS,KACHC,EADG,OAEQf,EAAS,MAAO,IAFxB,mBAETgB,EAFS,KAEJC,EAFI,OAIGjB,EAAS,KAAM,IAJlB,mBAITkB,EAJS,KAILC,EAJK,OAKYtC,mBAAS,IALrB,mBAKTuC,EALS,KAKDC,EALC,KAqBhB,OAdAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,qCAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,0CAOR,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,qCACA,qBAAKlC,UAAU,QAAf,mDAEA,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAAQP,SAAS,MAAMC,YAAY,OAAOC,MAAOmC,EAAMlC,SAAUmC,IACjE,cAAC,EAAD,CAAQtC,SAAS,MAAMC,YAAY,MAAMC,MAAOqC,EAAKpC,SAAUqC,IAC/D,cAAC,EAAD,CAAQxC,SAAS,YAAYC,YAAY,aAAaC,MAAOuC,EAAItC,SAAUuC,OAE7E,qBAAKnC,UAAU,SAAf,8CAEA,qBAAKA,UAAU,OAAf,SACE,wBACAoC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,MAAM,OACNC,OAAO,eCrCbC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c5b265e0.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ContEditor } from \"react-codemirror2\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\nconst Editor = (props) => {\r\n    const {\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange\r\n    } = props\r\n\r\n    const [open,setOpen]=useState(true)\r\n\r\n    const handleChange=(editor,data,value)=>{\r\n        onChange(value)\r\n    }\r\n    return ( \r\n        <>\r\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button \r\n                type=\"button\"\r\n                className=\"expand-collapse-btn\"\r\n                onClick={() => setOpen(prevOpen => !prevOpen)}\r\n                >\r\n                 <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n                </button>\r\n            </div>\r\n            <ContEditor\r\n            onBeforeChange={handleChange}\r\n            value={value}\r\n            className=\"code-mirror-wrapper\"\r\n            options={{\r\n                lineWrapping: true,\r\n                lint: true,\r\n                mode: language,\r\n                theme: 'material',\r\n                lineNumbers: true\r\n              }}\r\n            ></ContEditor>\r\n        </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Editor;","import React,{useEffect,useState} from 'react'\r\n\r\nconst PREFIX = 'codepen-clone-'\r\nconst useLocal = (key,initial) => {\r\n    const prefixKey=PREFIX+key\r\n    const [value,setValue]=useState(()=>{\r\n        const jsonValue=localStorage.getItem(prefixKey)\r\n        if(jsonValue!=null) return JSON.parse(jsonValue)\r\n        if(typeof initial==='function'){\r\n            return initial()\r\n        } else {\r\n            return initial\r\n        }\r\n    })\r\n    useEffect(() => {\r\n        localStorage.setItem(prefixKey, JSON.stringify(value))\r\n      }, [prefixKey, value])\r\n    return [value, setValue]\r\n}\r\nexport default useLocal;\r\n","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor';\nimport useLocal from '../hooks/useLocal';\n\nconst App = () => {\n  const [html, setHtml] = useLocal('html', '')\n  const [css, setCss] =   useLocal('css', '')\n\n  const [js, setJs] =useLocal('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n  \n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `)\n    }, 250)\n\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n\n  return (\n    <>\n    <div className=\"coder\">ü§† CODE EDITOR üßê\n    </div>\n    <div className=\"pane top-pane\">\n      <Editor language=\"xml\" displayName=\"HTML\" value={html} onChange={setHtml}/>\n      <Editor language=\"css\" displayName=\"CSS\" value={css} onChange={setCss}/>\n      <Editor language=\"Javacript\" displayName=\"Javascript\" value={js} onChange={setJs}/>\n    </div>\n    <div className=\"output\">üì∫ OUTPUT üíª\n    </div>\n    <div className=\"pane\">\n      <iframe\n      srcDoc={srcDoc}\n      title=\"output\"\n      sandbox=\"allow-scripts\"\n      width=\"100%\"\n      height=\"100%\"\n      />\n    </div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}